using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EthicalHackingSimulator
{
    public class MSExploit_File_Upload : MSExploit
    {
        public string type { get; private set; }
        private string fileName { get; set; }
        public string wormServer {get; private set;}

        public MSExploit_File_Upload(string name) : base(name)
        {
            type = "";
            fileName = "SneakyScript.exe";
            wormServer = "";
        }

        //Creates the Arbitrary File Upload Exploit
        public override void Create()
        {
            while(true)
            {
                Console.Write("What type of malicious file would you like to create? (Virus/Worm/Trojan) ");
                string fileType = Console.ReadLine();

                if(fileType == "virus" || fileType == "Virus")
                {
                    type = fileType;
                    CreateVirus();
                    return;
                }

                else if(fileType == "worm" || fileType == "Worm")
                {
                    type = fileType;
                    CreateWorm();
                    return;
                }

                else if(fileType == "trojan" || fileType == "Trojan")
                {
                    type = fileType;
                    CreateTrojan();
                    return;
                }

                else
                {
                    Console.WriteLine("That is not a valid file type.\n");
                    return;
                }
            }
        }

        //Deploys the exploit onto the given target
        public override void Deploy(Target t, int port)
        {
            string service = t.portsAndServices[port];
            Console.WriteLine("Gathering necessary files...");
            System.Threading.Thread.Sleep(2000);
            Console.WriteLine("Deploying {0} to {1} {2} service on port {3}...", this.name, t.ipAddress, service, port);
            System.Threading.Thread.Sleep(3000);
            Console.WriteLine("Success!\n");
            System.Threading.Thread.Sleep(2000);

            t.deployedExploit = this;

            Results();
        }

        //Observes the results of the exploit
        public override void Results()
        {
            if (type == "virus" || type == "Virus")
            {
                VirusResults();
            }
            else if(type == "worm" || type == "Worm")
            {
                WormResults();
            }
            else if(type == "trojan" || type == "Trojan")
            {
                TrojanResults();
            }
        }

        //Creates a virus type
        private void CreateVirus()
        {
            char[] drives = { 'C', 'D', 'F', 'G', 'H' };

            Console.WriteLine("Type: Crucial File Deletion");
            Console.WriteLine("Preparing virus payload...");
            System.Threading.Thread.Sleep(2000);
            Console.WriteLine("Designating filepaths...\n");
            System.Threading.Thread.Sleep(3000);
            
            for(int i = 0; i < drives.Length; i++)
            {
                Console.WriteLine("Filepath: {0}:\\windows\\system32\\config\\system", drives[i]);
                System.Threading.Thread.Sleep(750);
            }

            Console.WriteLine("Writing file deletion script...\n");
            System.Threading.Thread.Sleep(3000);
            OptionalRootkit();

            Console.WriteLine("Compiling...\n");           
            System.Threading.Thread.Sleep(2000);
            Console.WriteLine("\nWrapping payload in executable file...");
            System.Threading.Thread.Sleep(1000);
            Console.WriteLine("Executable created: {0}", fileName);
            Console.WriteLine("Virus file upload exploit successfully created and awaiting deployment!");            
        }

        //Creates a worm type
        private void CreateWorm()
        {
            Console.WriteLine("Type: Bandwith Consumption");
            Console.WriteLine("Network Propagation Method: Email List");
            Console.WriteLine("Preparing worm payload...");
            System.Threading.Thread.Sleep(2000);
            Console.WriteLine("Creating script to obtain email address list...");
            System.Threading.Thread.Sleep(3000);

            wormServer = DownloadServerIP();
            Console.WriteLine("Obtaining Download Server IP...");
            System.Threading.Thread.Sleep(2000);
            Console.WriteLine("Download server: {0}\n", wormServer);

            Console.WriteLine("Creating script to connect to the remote download server...");
            System.Threading.Thread.Sleep(3000);

            OptionalRootkit();

            Console.WriteLine("Compiling...\n");            
            System.Threading.Thread.Sleep(2000);
            Console.WriteLine("\nWrapping payload in executable file...");
            System.Threading.Thread.Sleep(1000);
            Console.WriteLine("Executable created: {0}", fileName);

            Console.WriteLine("Worm file upload exploit successfully created and awaiting deployment!");

        }

        //Creates a trojan type
        private void CreateTrojan()
        {
            Console.WriteLine("Type: Keylogger");
            Console.WriteLine("Preparing trojan payload...");
            System.Threading.Thread.Sleep(3000);
            Console.WriteLine("Creating script for key capture...");
            System.Threading.Thread.Sleep(2000);
            Console.WriteLine("Setting up remote transfer of captured data...");
            System.Threading.Thread.Sleep(3000);

            OptionalRootkit();

            fileName = "InnocuousProgram.exe";
            Console.WriteLine("Compiling...\n");
            System.Threading.Thread.Sleep(2000);
            Console.WriteLine("\nWrapping scripts into an executable...");
            System.Threading.Thread.Sleep(1000);
            Console.WriteLine("Executable Created: {0}", fileName);

            Console.WriteLine("Trojan file upload exploit successfully created and awaiting deployment!");
        }

        //Results for the virus type
        private void VirusResults()
        {
            //START HERE
        }

        //Results for the Worm type
        private void WormResults()
        {

        }

        //Results for the Trojan Type
        private void TrojanResults()
        {

        }

        //Creates a random IP address for the Worm exploit
        private string DownloadServerIP()
        {
            string ip = "";
            Random r = new Random();            
            int first, second, third, fourth;

            first = r.Next(1, 255);
            second = r.Next(0, 255);
            third = r.Next(0, 255);
            fourth = r.Next(0, 255);

            ip = first + "." + second + "." + third + "." + fourth;

            return ip;
        }
    }
}
