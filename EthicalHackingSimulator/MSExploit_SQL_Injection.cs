using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EthicalHackingSimulator
{
    public class MSExploit_SQL_Injection : MSExploit
    {
        public MSExploit_SQL_Injection(string name) : base(name) { }

        //Creates the SQL Injection exploit
        public override void Create()
        {
            //Demonstrating that there needs to be a lack of prepared statements for SQL Injection to work
            Console.WriteLine("Creating test query...\n");
            System.Threading.Thread.Sleep(1000);
            Console.WriteLine("Query: \"SELECT * FROM test\"");
            Console.WriteLine("Running test query on test database to check for lack of Prepared Statements...");
            System.Threading.Thread.Sleep(500);
            Console.WriteLine("OK!\n");
            System.Threading.Thread.Sleep(1000);

            //Creates fictional queries based on comman table names.
            Console.WriteLine("Creating queries for common table names...");
            System.Threading.Thread.Sleep(2000);

            //Prints the queries out in realistic fashion.
            string[] queries = Queries();
            for(int i = 0; i < queries.Length; i++)
            {
                Console.WriteLine("Query: \"{0}\"", queries[i]);
                System.Threading.Thread.Sleep(500);
            }
            Console.WriteLine();

            //Simulates creating a script that will automate the process of executing the queries
            Console.WriteLine("Creating script to run Injection...");
            System.Threading.Thread.Sleep(2000);
            Console.WriteLine("Compiling...\n");
            System.Threading.Thread.Sleep(3000);

            Console.WriteLine("SQL Injection exploit created and ready for deployment!\n");
        }

        //Deploys the exploit onto the target [PH]
        public override void Deploy(Target t)
        {
            //TODO Implement
        }

        //Observes the results of the exploit
        public override void Results()
        {

        }

        //Array of fictional database queries
        private string[] Queries()
        {
            string[] queries =
            {
                "SELECT username, password FROM Users",
                "SELECT uname, pword FROM Users",
                "SELECT user, pass FROM Users",
                "SELECT username, password FROM Employee",
                "SELECT uname, pword FROM Employee",
                "SELECT user, pass FROM Employee",
                "SELECT username, password FROM Staff",
                "SELECT uname, pword FROM Staff",
                "SELECT user, pass FROM Staff"
            };

            return queries;
        }
    }
}
